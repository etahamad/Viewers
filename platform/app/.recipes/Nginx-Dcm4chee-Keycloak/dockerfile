# Stage 1: Build the application
FROM node:20.18.1-slim as builder

# Setup the working directory
RUN mkdir /usr/src/app
WORKDIR /usr/src/app

# Install dependencies
RUN apt-get update && apt-get install -y build-essential python3

# Copy the entire project
COPY ./ /usr/src/app/

# Install node dependencies
RUN yarn config set workspaces-experimental true
RUN yarn install

# Set the environment for the build
ENV APP_CONFIG=config/docker-nginx-dcm4chee-keycloak.js
ARG PUBLIC_URL=/
ENV PUBLIC_URL=${PUBLIC_URL}

# Build the application
RUN yarn run build

# Precompress files
RUN chmod u+x platform/app/.recipes/Nginx-Dcm4chee-Keycloak/config/compressDist.sh
RUN platform/app/.recipes/Nginx-Dcm4chee-Keycloak/config/compressDist.sh

# Stage 2: Setup the NGINX environment with OAuth2 Proxy
FROM nginxinc/nginx-unprivileged:1.27-alpine as final
ARG PUBLIC_URL=/
ENV PUBLIC_URL=${PUBLIC_URL}
ARG PORT=80
ENV PORT=${PORT}
RUN rm /etc/nginx/conf.d/default.conf

# Copy config and entrypoint script to /usr/src
COPY platform/app/.recipes/Nginx-Dcm4chee-Keycloak/config/Viewer-v3.x /usr/src/
COPY platform/app/.recipes/Nginx-Dcm4chee-Keycloak/config/Viewer-v3.x/entrypoint.sh /usr/src/entrypoint.sh

USER root
RUN chmod 777 /usr/src/entrypoint.sh

# Copy built app to nginx html directory
COPY --from=builder /usr/src/app/platform/app/dist /usr/share/nginx/html${PUBLIC_URL}

RUN chown -R nginx:nginx /usr/share/nginx/html && chmod -R 755 /usr/share/nginx/html
USER nginx
ENTRYPOINT ["/usr/src/entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"]
